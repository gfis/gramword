#!/usr/bin/perl

# prepare for raw db table loading of
# roots of words and grammatical type
# @(#) $Id: load_roots.pl 36 2008-09-08 06:05:06Z gfis $
# 2016-09-23: remove "/" in output
# 2006-07-18: with enrel, morel
# 2006-06-05, Georg Fischer
#-------------------------------------------------------------------------
#  Copyright 2006 Dr. Georg Fischer <punctum at punctum dot kom>
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#-------------------------------------------------------------------------
use strict;

    # binmode(STDIN , ":utf8");
    # binmode(STDOUT, ":utf8");
    my $morph = "VbW";
    my $infend = "en";
    my $suffix = "";
    my $prefix = "";
    my @parts;
    while (<>) {
        next if m/^\#/ || m/^\s*$/; # skip comments and empty lines
        if (m/^\%/) { # processing instruction
            if (m/^\%morph\=(\w+)\,(.+)$/) {
                $morph = $1;
                $infend = $2;
            }
        }
        else { # root entry with optional prefixes
            s/\s*$//; # chomp
            @parts = split;
            my $ipart = 0;
            my $root = $parts[$ipart ++];
            my $line;
        #   if ($parts[$ipart] eq "/") { # root without prefix
        #       $prefix = $parts[$ipart ++];
        #       $prefix =~ s/\-//g;
        #       $line = "$prefix$root\t$morph\t$infend\tVbIn";
        #       $line =~ s{\/}{}g; # this is the change!
        #       print "$line\n";
        #   } # without prefix
            while ($ipart < scalar(@parts)) { # all prefixes
                $prefix = $parts[$ipart ++];
                $prefix =~ s/\-//g;
                $line = "$prefix$root\t$morph\t$infend\tVbIn";
                $line =~ s{\/}{}g; # this is the change!
                print "$line\n";
            } # while all prefixes
        } # root entry with optional prefixes
    } # while <>
__DATA__
# sz3.txt
Morphem codes: Aj 115 Ar 109 Av 31 Cj 56 Ir 13 Nm 12 Nu 7 Pn 49 Pr 103 Pu 182 Rp 1 Sb 119 Un 22 Vb 191 Xy 127
88.8% = 1010 recognized and 127 unknown out of 1137 total words

Morphem codes: Aj 116 Ar 109 Av 31 Cj 56 Ir 13 Nm 12 Nu 7 Pn 49 Pr 103 Pu 182 Rp 1 Sb 123 Un 22 Vb 134 Xy 179
84.3% = 958 recognized and 179 unknown out of 1137 total words

Morphem codes: Aj 116 Ar 109 Av 31 Cj 56 Ir 13 Nm 12 Nu 7 Pn 49 Pr 103 Pu 182 Rp 1 Sb 123 Un 22 Vb 127 Xy 186
83.6% = 951 recognized and 186 unknown out of 1137 total words
#-------
# generated by perl vbroot.pl -en Vb/vbur.srt
%morph=VbRtWeak,en
aal     /
aas     / ver-
flau    ab/
schott  ab/
speck   ab/
wrack   ab/
acht    / be- be-ob- be-gut/ er- miss/ ver-
ahnd    /
ahn     / er-
amt     be- ver-be- ent-
raum    an/be-
streng  an/ über-an-
stück   an/ be- früh/ ver-hack/
antwort / be- ver- über-
törn    an/
arbeit  / ab/ auf/ aus/ be- durch/ ein/ empor/ er- hand/ her-an/ her-aus/ hin/ hoch/ kurz/ mit/ nach/ schwarz
/ tot/ um/ ver- vor/ weg/ weiter/ weiter/ver- zu/ zusammen/ über-
